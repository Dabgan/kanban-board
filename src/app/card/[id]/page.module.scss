@use '@/styles/abstracts/sizes';
@use '@/styles/abstracts/mixins';
@use '@/styles/abstracts/component-sizes';
@use '@/styles/abstracts/colors';

.container {
    @include mixins.flex(column, center, center);

    background-color: colors.$color-background;
    color: colors.$color-text-secondary;
    padding: sizes.$spacing-lg;
    width: 100%;
}

.card-container {
    background-color: colors.$color-surface-dark;
    border-radius: sizes.$radius-md;
    box-sizing: content-box;
    max-width: sizes.$card-detail-width;
    min-height: sizes.$card-detail-min-height;
    padding: sizes.$spacing-lg;
    width: 100%;
    margin-top: sizes.$spacing-xl;
}

.header {
    @include mixins.flex(row, space-between, center, sizes.$spacing-md);
    margin-bottom: sizes.$spacing-lg;
    flex-wrap: nowrap;
}

.column {
    flex: 1;
    margin: 0 sizes.$spacing-md;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    min-width: 0;
}

.content {
    @include mixins.flex(column, flex-start, stretch, sizes.$spacing-lg);

    button {
        border: transparent;
    }

    input {
        @include mixins.interactive-border(component-sizes.$border-width);

        border-radius: sizes.$radius-sm;
        font-size: component-sizes.$heading-font-size;
        font-weight: component-sizes.$heading-font-weight;
        padding: sizes.$spacing-sm;
    }
}

.error {
    @include mixins.flex(column, center, center, sizes.$spacing-lg);

    height: 100vh;
    padding: sizes.$spacing-lg;
    width: 100%;
}

.error-message {
    color: colors.$color-error;
    font-size: component-sizes.$error-font-size;
    text-align: center;
}
