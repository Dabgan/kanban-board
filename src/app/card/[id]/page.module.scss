@use '@/styles/abstracts/sizes';
@use '@/styles/abstracts/mixins';
@use '@/styles/abstracts/component-sizes';
@use '@/styles/abstracts/colors';

.container {
    @include mixins.flex(column, center, center);
    min-height: 100vh;
    padding: sizes.$spacing-lg;
    width: 100%;
    background-color: colors.$color-background;
}

.card-container {
    background-color: colors.$color-surface-dark;
    border-radius: sizes.$radius-md;
    max-width: sizes.$card-detail-width;
    padding: sizes.$spacing-lg;
    width: 100%;
}

.header {
    @include mixins.flex(row, space-between, center, sizes.$spacing-md);
    margin-bottom: sizes.$spacing-lg;
}

.content {
    @include mixins.flex(column, flex-start, stretch, sizes.$spacing-lg);

    [data-type='description'] {
        min-height: component-sizes.$description-min-height;
        background-color: colors.$color-surface;
        border: component-sizes.$border-width solid colors.$color-accent;

        &[contenteditable='true'] {
            min-height: component-sizes.$description-min-height;
            background-color: colors.$color-surface;
            border-color: colors.$color-accent;
        }
    }

    [data-type='title'] {
        @include mixins.interactive-border(component-sizes.$border-width);
        border-radius: sizes.$radius-sm;
        padding: sizes.$spacing-sm;
        font-size: component-sizes.$heading-font-size;
        font-weight: component-sizes.$heading-font-weight;

        h1 {
            font-size: inherit;
            font-weight: inherit;
            margin: 0;
        }
    }
}

.error {
    @include mixins.flex(column, center, center, sizes.$spacing-lg);
    height: 100vh;
    padding: sizes.$spacing-lg;
    width: 100%;
}

.error-message {
    color: colors.$color-error;
    font-size: component-sizes.$error-font-size;
    text-align: center;
}

.column {
    color: colors.$color-text-secondary;
    font-size: component-sizes.$title-font-size;
    margin: 0;
    text-align: center;
    flex: 1;
}
