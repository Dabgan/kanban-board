@use 'sizes';
@use 'component-sizes';
@use 'colors';

@mixin flex($direction: row, $justify: flex-start, $align: stretch, $gap: 0) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
    @if $gap != 0 {
        gap: $gap;
    }
}

@mixin interactive-border($border-width: 2px) {
    border: $border-width solid transparent;
    @include transition('border');

    &:hover {
        border-color: colors.$color-accent;
    }
}

@mixin surface-element {
    background-color: colors.$color-surface;
    border-radius: sizes.$radius-sm;
    color: colors.$color-text;

    &:hover {
        background-color: colors.$color-surface-hover;
    }
}

@mixin text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin input-base {
    @include surface-element;
    border: none;
    font-family: inherit;
    font-size: 1rem;
    padding: sizes.$spacing-sm;
    width: 100%;

    &:focus {
        outline: 2px solid colors.$color-accent;
        outline-offset: -2px;
    }
}

@mixin button-base {
    @include surface-element;
    border: component-sizes.$border-width solid colors.$color-accent;
    cursor: pointer;
    font-family: inherit;

    &:hover {
        background-color: colors.$color-surface-hover;
        border-color: colors.$color-accent-hover;
    }
}

@mixin transition($property: all) {
    transition: $property component-sizes.$transition-duration component-sizes.$transition-timing;
}
