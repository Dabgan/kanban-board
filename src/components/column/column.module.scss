@use '@/styles/abstracts/sizes';
@use '@/styles/abstracts/mixins';
@use '@/styles/abstracts/component-sizes';
@use '@/styles/abstracts/colors';
@use '@/styles/utilities/accessibility';

.column {
    @include mixins.flex(column, flex-start, stretch);
    transition:
        transform 0.2s ease,
        box-shadow 0.2s ease,
        opacity 0.2s ease;

    background-color: colors.$color-surface-dark;
    border-radius: sizes.$radius-md;
    cursor: grab;
    flex-shrink: 0;
    height: fit-content;
    min-height: sizes.$card-min-height;
    min-width: sizes.$column-width;
    padding: 0 sizes.$spacing-md sizes.$spacing-md;
    width: sizes.$column-width;

    &:active {
        cursor: grabbing;
    }
}

.title-bar {
    @include mixins.flex(row, space-between, center);

    margin: sizes.$spacing-md 0;

    button {
        border: transparent;
        border-radius: sizes.$radius-sm;
        font-size: component-sizes.$title-font-size;
        font-weight: component-sizes.$title-font-weight;
        height: sizes.$input-height;
        max-width: calc(100% - #{sizes.$delete-icon-size});
        padding: sizes.$spacing-sm;
        @include mixins.flex(row, flex-start, center);

        h2 {
            font-size: inherit;
            font-weight: inherit;
            margin: 0;
            max-width: 100%;
            @include mixins.text-truncate;
        }
    }
}

.content {
    @include mixins.flex(column, flex-start, stretch);

    margin-bottom: sizes.$spacing-md;

    > * {
        margin-bottom: sizes.$spacing-md;

        &:last-child {
            margin-bottom: 0;
        }
    }
}

.visually-hidden {
    @extend %visually-hidden;
}
